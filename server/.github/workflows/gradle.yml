# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

env:
  RESOURCE_PATH: ./src/main/resources/application.yml

on:
  push:
    branches: [ "master" ]
#   pull_request:
#     branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Set yml file
      uses: microsoft/variable-substitution@v1
      with:
        files: ${{ env.RESOURCE_PATH }}
      env:
        JWT_KEY: ${{ secrets.JWT_KEY }}
        MY_ACCESSKEY: ${{ secrets.MY_ACCESSKEY }}
        MY_SECRETKEY: ${{ secrets.MY_SECRETKEY }}
        MY_REGION: ${{ secrets.MY_REGION }}
        EMAIL_MAN: ${{ secrets.EMAIL }}
        EMAIL_PASSWORD: ${{ secrets.PASSWORD }}
        security.oauth2.client.registration.google.clientId: ${{ secrets.G_CLIENT_ID }}
        security.oauth2.client.registration.google.clientSecret: ${{ secrets.G_CLIENT_SECRET }}
    - name: Set yml file1
      run: |
        cp $RESOURCE_PATH $RESOURCE_PATH.bak # 백업 파일 생성
        sed -i "s/\${MYSQL_PASSWORD}/${{ secrets.MYSQL_PASSWORD }}/g" $RESOURCE_PATH
        sed -i "s/\${G_CLIENT_ID}/${{ secrets.G_CLIENT_ID }}/g" $RESOURCE_PATH
        sed -i "s/\${G_CLIENT_SECRET}/${{ secrets.G_CLIENT_SECRET }}/g" $RESOURCE_PATH
      env:
        MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        G_CLIENT_ID: ${{ secrets.G_CLIENT_ID }}
        G_CLIENT_SECRET: ${{ secrets.G_CLIENT_SECRET }}

    - name: Add permission
      run: chmod +x gradlew
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: build

      # build한 후 프로젝트를 압축합니다.
    - name: Make zip file
      run: zip -r ./ieun21.zip .
      shell: bash

      # Access Key와 Secret Access Key를 통해 권한을 확인합니다.
      # 아래 코드에 Access Key와 Secret Key를 직접 작성하지 않습니다.
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }} # 등록한 Github Secret이 자동으로 불려옵니다.
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # 등록한 Github Secret이 자동으로 불려옵니다.
        aws-region: ap-northeast-2

      # 압축한 프로젝트를 S3로 전송합니다.
    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./ieun21.zip s3://ieun/ieun21.zip

      # CodeDeploy에게 배포 명령을 내립니다.
    - name: Code Deploy
      run: >
        aws deploy create-deployment --application-name re21
        --deployment-config-name CodeDeployDefault.AllAtOnce
        --deployment-group-name re21-group
        --s3-location bucket=ieun,bundleType=zip,key=ieun21.zip
